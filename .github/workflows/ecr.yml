name: Deploy to Amazon ECR
on:
  push:
    branches: [ "main" ]
  # pull_request:

env:
  AWS_REGION: ap-northeast-1

permissions:
  id-token: write
  contents: read
  # issues: read
  # pull-requests: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Generate session name
        id: session
        run: |
          repo="${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}"
          echo "name=${repo}-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}" >> "${GITHUB_OUTPUT}"
      - uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: 'ap-northeast-1'
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          role-session-name: ${{ steps.session.outputs.name }}
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          ECR_REPOSITORY_LOWER_CASE=$(echo "${GITHUB_REPOSITORY}" | sed "s/${GITHUB_REPOSITORY_OWNER}\///")
          docker build -t $ECR_REGISTRY/${{ ECR_REPOSITORY }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ ECR_REPOSITORY }}:$IMAGE_TAG
